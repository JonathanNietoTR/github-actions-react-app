name: CI
on:
  pull_request:
    branches: [develop, master]
  push: #this works when we merge a branch into develop branch
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest
    ## take our surge credentials from github secrets
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      # Caching NPM Dependencies
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
            node-version: "12.x"
      - run: npm ci #similar to npm i but it's more suitable for CI environments
      - run: npm run format:check #check code fotgenerate coverage
      - run: npm test -- --coverage
        env:
          CI: true #enviroment variable
      # Uploading Artifacts using upload-artifact
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      ## we only would like to run this step if it's a push event not a pull request event
      - name: Build Project
        if: github.event_name == 'push'  #accessing github context
        run: npm run build
      # Uploading Artifacts using upload-artifact & we only would like to run this step if it's a push event not a pull request event
      - name: Upload Build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      #ZIP Assets when event is push and we need to check that we are pushing into master branch
      - name: ZIP Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      #create a release when event is push and we need to check that we are pushing into master branch
      - name: Create a release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - run: npm install -g surge ; we can install surge globally and use just surge, but we can use npx surge to
      ## we only would like to run this step if it's a push event not a pull request event
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain redundant-goose.surge.sh
      
      ## we only would like to run this step if it's a push event not a pull request event
      - name: Deploy to Production
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: npx surge --project ./build --domain tacit-kittens.surge.sh
